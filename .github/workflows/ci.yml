name: CI

on:
    push:
        branches: [master]
    pull_request:

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        name: test ${{ matrix.rust }} ${{ matrix.spec.target }}
        runs-on: ${{ matrix.spec.os }}
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                rust: [stable]
                spec:
                    - host: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                    - host: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                    - host: ubuntu-latest
                      target: i686-unknown-linux-gnu
                    - host: macos-latest
                      target: aarch64-apple-darwin
                    - host: windows-latest
                      target: x86_64-pc-windows-gnu
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rust }}
                  target: ${{ matrix.spec.target }}
            - uses: taiki-e/setup-cross-toolchain-action@v1
              if: ${{ matrix.host == 'ubuntu-latest' }}
              with:
                  target: ${{ matrix.spec.target }}
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: test
              run: cargo test --workspace --target ${{ matrix.spec.target }}

    feature-checks:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: taiki-e/install-action@cargo-hack
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - name: cargo hack
              run: cargo hack check --feature-powerset --depth 2

    clippy:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@clippy
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - run: cargo clippy --workspace --all-targets --all-features
              env:
                  RUSTFLAGS: -Dwarnings

    docs:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
            - run: cargo doc --workspace --all-features --no-deps --document-private-items
              env:
                  RUSTDOCFLAGS: "--cfg docsrs -D warnings"

    fmt:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rustfmt
            - run: cargo fmt --all --check
