name: CI

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test ${{ matrix.rust }} ${{ matrix.spec.target }}
    runs-on: ${{ matrix.spec.host }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        spec:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            test: true
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            test: true
          - host: ubuntu-latest
            target: i686-unknown-linux-gnu
            test: true
          - host: macos-latest
            target: x86_64-apple-darwin
            test: true
          - host: macos-latest
            target: aarch64-apple-darwin
            test: false
          # TODO
          # - host: windows-latest
          #   target: x86_64-pc-windows-gnu
          #   test: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.spec.target }}
      - uses: taiki-e/setup-cross-toolchain-action@v1
        if: ${{ matrix.spec.host == 'ubuntu-latest' }}
        with:
          target: ${{ matrix.spec.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: install prerequisites
        shell: bash
        run: |
          if [ "${{ matrix.spec.host }}" == "ubuntu-latest" ]; then
            sudo apt-get install xsltproc
          elif [ "${{ matrix.spec.host }}" == "macos-latest" ]; then
            brew install libxslt
          else
            choco install xsltproc
          fi
      - name: build
        run: cargo build --workspace --target ${{ matrix.spec.target }} --all-targets -vv
      - name: test
        if: ${{ matrix.spec.test }}
        run: cargo test --workspace --target ${{ matrix.spec.target }}

  clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: install prerequisites
        run: sudo apt-get install xsltproc
      - run: cargo clippy --workspace --all-targets
        env:
          RUSTFLAGS: -Dwarnings

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: install prerequisites
        run: sudo apt-get install xsltproc
      - run: cargo doc --workspace --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: "--cfg docsrs -D warnings"

  fmt:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all --check
