searchState.loadedDescShard("xkcp_rs", 0, "xkcp-rs\nContains the error value\nKeccak errors.\nGeneric failure.\nKeccak hash function instance.\nContains the success value\nThe provided output buffer is too small.\nKeccak result type alias.\nFunction to call after all input blocks have been input …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a raw integer return value into a <code>Result</code>.\nConverts a raw <code>HashReturn</code> value into a <code>Result</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nImplementation of Keccak-224.\nInitializes a Keccak-224 instance.\nImplementation of Keccak-256.\nInitializes a Keccak-256 instance.\nImplementation of Keccak-384.\nInitializes a Keccak-384 instance.\nImplementation of Keccak-512.\nInitializes a Keccak-512 instance.\nFunction to evaluate the sponge function Keccak[r, c] in a …\nInitialize the <code>Keccak[r, c]</code> sponge function instance used …\nImplementation of SHA3-224 [FIPS 202].\nInitializes a SHA3-224 instance as specified in the FIPS …\nImplementation of SHA3-256 [FIPS 202].\nInitializes a SHA3-256 instance as specified in the FIPS …\nImplementation of SHA3-384 [FIPS 202].\nInitializes a SHA3-384 instance as specified in the FIPS …\nImplementation of SHA3-512 [FIPS 202].\nInitializes a SHA3-512 instance as specified in the FIPS …\nImplementation of the SHAKE128 extendable output function …\nInitializes a SHAKE128 instance as specified in the FIPS …\nImplementation of the SHAKE256 extendable output function …\nInitializes a SHAKE256 instance as specified in the FIPS …\nSqueezes output data.\nAbsorbs input data.")